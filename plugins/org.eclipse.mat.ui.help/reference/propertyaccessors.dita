<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2008, 2010 SAP AG.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
        SAP AG - initial API and implementation
 -->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd" >
<reference id="propertyaccessors" xml:lang="en-us">
	<title>Property Accessors</title>
	<shortdesc />
	<prolog>
		<copyright>
			<copyryear year=""></copyryear>
			<copyrholder>
				Copyright (c) 2008, 2010 SAP AG and others.
			    All rights reserved. This program and the accompanying materials
			    are made available under the terms of the Eclipse Public License v1.0
			    which accompanies this distribution, and is available at
			    http://www.eclipse.org/legal/epl-v10.html
			</copyrholder>
		</copyright>
	</prolog>

	<refbody>
		<section>
			<title>Accessing fields of the heap object</title>
			<p> Properties of heap objects are accessed using a simple dot
				notation:</p>
			<p> [ &lt;alias&gt;. ] &lt;field&gt; . &lt;field&gt;.
				&lt;field&gt;
			</p>
			<p>
				An
				<b>alias</b>
				can be defined in the
				<xref href="oqlsyntaxfrom.dita">FROM Clause</xref>
				to identify the current object, i.e. row in the SQL
				analogy, on which the OQL statement operates. Without
				alias, the field is assumed to be one of the fields of
				the current object.
				<b>Fields</b>
				are attributes of the Java objects in the heap dump. Use
				the
				<cmdname>Object Inspector</cmdname>
				to find out about the available fields of an object.
			</p>
		</section>
		<section>
			<title>Accessing Java Bean properties</title>
			<p>[ &lt;alias&gt;. ] @&lt;attribute&gt; ...</p>
			<p>
				Using the @ symbol, OQL accesses attributes of the
				underlying Java objects used by Memory Analyzer to represent
				objects in the heap dump. The attributes are resolved via
				Bean Introspection. The following table lists some
				commonly used Java attributes.
			</p>
			<simpletable relcolwidth="2* 2* 2* 3*" id="javabean_prop">
				<strow>
					<stentry>Any heap object</stentry>
					<stentry><xref href="../../../ntopic/org.eclipse.mat.ui.help/doc/org/eclipse/mat/snapshot/model/IObject.html#field_summary" format="html">IObject</xref></stentry>
					<stentry>objectId</stentry>
					<stentry>id of snapshot object</stentry>
				</strow>
				<strow>
					<stentry />
					<stentry />
					<stentry>objectAddress</stentry>
					<stentry>address of snapshot object</stentry>
				</strow>
				<strow>
					<stentry />
					<stentry />
					<stentry>class</stentry>
					<stentry>class of this object</stentry>
				</strow>
				<strow>
					<stentry />
					<stentry />
					<stentry>usedHeapSize</stentry>
					<stentry>shallow heap size</stentry>
				</strow>
				<strow>
					<stentry />
					<stentry />
					<stentry>retainedHeapSize</stentry>
					<stentry>retained heap size</stentry>
				</strow>
				<strow>
					<stentry />
					<stentry />
					<stentry>displayName</stentry>
					<stentry>display name</stentry>
				</strow>
				<strow>
					<stentry>Class object</stentry>
					<stentry><xref href="../../../ntopic/org.eclipse.mat.ui.help/doc/org/eclipse/mat/snapshot/model/IClass.html#field_summary" format="html">IClass</xref></stentry>
					<stentry>classLoaderId</stentry>
					<stentry>id of the class loader</stentry>
				</strow>
				<strow>
					<stentry>Any array</stentry>
					<stentry><xref href="../../../ntopic/org.eclipse.mat.ui.help/doc/org/eclipse/mat/snapshot/model/IArray.html#field_summary" format="html">IArray</xref></stentry>
					<stentry>length</stentry>
					<stentry>length of the array</stentry>
				</strow>
			</simpletable>
		</section>
		<section>
			<title>Calling Java methods</title>
			<codeblock>[ &lt;alias&gt; . ] @&lt;method&gt;( [ &lt;expression&gt;, &lt;expression&gt; ] ) ...</codeblock>
			<p>
				Adding ( ) forces OQL to interpret this as a Java method
				call. The call is executed via reflection. The following table lists some
				common Java methods on the underlying Java objects used by Memory Analyzer to represent
				objects in the heap dump.
			</p>
			<simpletable relcolwidth="2* 2* 2* 3*" id="javabean_prop">
				<strow>
					<stentry>$snapshot</stentry>
					<stentry><xref href="../../../ntopic/org.eclipse.mat.ui.help/doc/org/eclipse/mat/snapshot/ISnapshot.html#method_summary" format="html">ISnapshot</xref></stentry>
					<stentry>
						<codeblock><xref href="../../../ntopic/org.eclipse.mat.ui.help/doc/org/eclipse/mat/snapshot/ISnapshot.html#getClasses()" format="html">getClasses()</xref></codeblock>
					</stentry>
					<stentry>a collection of all classes</stentry>
				</strow>
				<strow>
					<stentry />
					<stentry />
					<stentry>
						<codeblock><xref href="../../../ntopic/org.eclipse.mat.ui.help/doc/org/eclipse/mat/snapshot/ISnapshot.html#getClassesByName(java.util.regex.Pattern, boolean)" format="html">getClassesByName(String name, boolean includeSubClasses)</xref></codeblock>
					</stentry>
					<stentry>a collection of classes</stentry>
				</strow>
				<strow>
					<stentry>Class object</stentry>
					<stentry><xref href="../../../ntopic/org.eclipse.mat.ui.help/doc/org/eclipse/mat/snapshot/model/IClass.html#method_summary" format="html">IClass</xref></stentry>
					<stentry>
						<codeblock><xref href="../../../ntopic/org.eclipse.mat.ui.help/doc/org/eclipse/mat/snapshot/model/IClass.html#hasSuperClass()" format="html">hasSuperClass()</xref></codeblock>
					</stentry>
					<stentry>
						result is true if the class has a super class
					</stentry>
				</strow>
				<strow>
					<stentry />
					<stentry />
					<stentry>
						<codeblock><xref href="../../../ntopic/org.eclipse.mat.ui.help/doc/org/eclipse/mat/snapshot/model/IClass.html#isArrayType()" format="html">isArrayType()</xref></codeblock>
					</stentry>
					<stentry>
						the result is true if the class is an array type
					</stentry>
				</strow>
				<strow>
					<stentry>Any heap object</stentry>
					<stentry><xref href="../../../ntopic/org.eclipse.mat.ui.help/doc/org/eclipse/mat/snapshot/model/IObject.html#method_summary" format="html">IObject</xref></stentry>
					<stentry>
						<codeblock><xref href="../../../ntopic/org.eclipse.mat.ui.help/doc/org/eclipse/mat/snapshot/model/IObject.html#getObjectAddress()" format="html">getObjectAddress()</xref></codeblock>
					</stentry>
					<stentry>
						The address of a snapshot object as a long integer
					</stentry>
				</strow>
			</simpletable>
		</section>
		<section>
			<title>Build-in OQL functions</title>
			<codeblock>&lt;function&gt;( &lt;parameter&gt; )</codeblock>
			<p>Build-in functions.</p>
			<simpletable relcolwidth="2* 3*" id="oql_functions">
				<strow>
					<stentry>
						<codeblock>toHex( number )</codeblock>
					</stentry>
					<stentry>Print the number as hexadecimal</stentry>
				</strow>
				<strow>
					<stentry>
						<codeblock>toString( object )</codeblock>
					</stentry>
					<stentry>
						Returns the value of an object, e.g. the content
						of a String etc.
					</stentry>
				</strow>
				<strow>
					<stentry>
						<codeblock>dominators( object )</codeblock>
					</stentry>
					<stentry>
						The objects immediately dominated by the object
					</stentry>
				</strow>
				<strow>
					<stentry>
						<codeblock>outbounds( object )</codeblock>
					</stentry>
					<stentry>outbound referrer</stentry>
				</strow>
				<strow>
					<stentry>
						<codeblock>inbounds( object )</codeblock>
					</stentry>
					<stentry>inbound referrer</stentry>
				</strow>
				<strow>
					<stentry>
						<codeblock>classof( object )</codeblock>
					</stentry>
					<stentry>the class of the current object</stentry>
				</strow>
				<strow>
					<stentry>
						<codeblock>dominatorof( object )</codeblock>
					</stentry>
					<stentry>
						the immediate dominator, -1 if none
					</stentry>
				</strow>
			</simpletable>

		</section>
	</refbody>
</reference>